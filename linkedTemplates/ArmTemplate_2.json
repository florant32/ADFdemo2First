{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "ADFDataLakeAccelerator"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/Generic - From SQL Server - On-premises to to ADL2 wildcard - parquet')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get records to load into ADL2",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT\n    MTC.*,\n    BS.ScheduleName\nFROM\n    [operation].[MetadataTableControl] MTC\nINNER JOIN\n    [operation].[BatchSchedule] BS ON MTC.BatchScheduleID = BS.BatchScheduleID\nWHERE\n    MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.Active = 1\n    AND BS.Active = 1\n    AND BS.ScheduleName = '@{pipeline().parameters.ScheduleName}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Load records into ADL2",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get records to load into ADL2",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get records to load into ADL2').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "if - Verify tables to load into Destination",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Verify tables to load into Destination",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@if(equals(activity('Verify tables to load into Destination').output.firstrow.ProcessTable,'Yes'), 'True','False')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Get parameters to start log",
                                                "type": "Lookup",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 10 --Status = 'Process running'\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log start",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to start log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Ingest records into ADL2",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Log start",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlServerSource",
                                                        "sqlReaderQuery": {
                                                            "value": "@{concat('SELECT * FROM ',\nitem().SourceControl3,'.',item().SourceControl4,' ',item().SourceControl5,' '\n)}",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "ParquetSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "ParquetWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_SQLServer_OnPremises",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().SourceKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "SchemaName": {
                                                                "value": "@item().SourceControl3",
                                                                "type": "Expression"
                                                            },
                                                            "TableName": {
                                                                "value": "@item().SourceControl4",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().SourceKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_ADL2_GenericDataset_parquet",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().DestinationKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "StorageAccount": {
                                                                "value": "@item().DestinationControl1",
                                                                "type": "Expression"
                                                            },
                                                            "ContainerName": {
                                                                "value": "@item().DestinationControl2",
                                                                "type": "Expression"
                                                            },
                                                            "FolderName": {
                                                                "value": "@item().DestinationControl3",
                                                                "type": "Expression"
                                                            },
                                                            "FileName": {
                                                                "value": "@{concat(\nitem().DestinationControl4,'/',\nformatDateTime(addDays(utcnow(),-1),'yyyy'),'/',formatDateTime(addDays(utcnow(),-1),'MM'),'/',formatDateTime(addDays(utcnow(),-1),'dd'),'/',\nitem().DestinationControl5\n)}",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().DestinationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Get parameters to end log",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 100 --\"End with success\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Get parameters to log error",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 20 --\"End with error\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log end",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to end log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataRead",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataWritten",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.Throughput",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.rowsCopied",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log error",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to log error",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Verify tables to load into Destination",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT DISTINCT\n    'Yes'                       AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 1\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'\nUNION\nSELECT DISTINCT\n    'No'                        AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 0\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_OperationAzureDB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "SecretName": {
                                                    "value": "@pipeline().parameters.SecretName",
                                                    "type": "Expression"
                                                },
                                                "OperationKeyVaultURI": {
                                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "BatchProcessID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "SecretName": {
                        "type": "string",
                        "defaultValue": "SecretName"
                    },
                    "ScheduleName": {
                        "type": "string",
                        "defaultValue": "ScheduleName"
                    },
                    "BatchProcessPhaseNameID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "GroupLoad": {
                        "type": "string",
                        "defaultValue": "GroupLoad"
                    },
                    "OperationKeyVaultURI": {
                        "type": "string",
                        "defaultValue": "OperationKeyVaultURI"
                    }
                },
                "folder": {
                    "name": "Pipeline Templates/Source SQL Server"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-30T17:48:51Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Generic - From http to ADL2 - csv')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get records to load into ADL2",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT\n    MTC.*,\n    BS.ScheduleName\nFROM\n    [operation].[MetadataTableControl] MTC\nINNER JOIN\n    [operation].[BatchSchedule] BS ON MTC.BatchScheduleID = BS.BatchScheduleID\nWHERE\n    MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.Active = 1\n    AND BS.Active = 1\n    AND BS.ScheduleName = '@{pipeline().parameters.ScheduleName}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Load records into ADL2",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get records to load into ADL2",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get records to load into ADL2').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "if - Verify tables to load into Destination",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Verify tables to load into Destination",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@if(equals(activity('Verify tables to load into Destination').output.firstrow.ProcessTable,'Yes'), 'True','False')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Get parameters to start log",
                                                "type": "Lookup",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 10 --Status = 'Process running'\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log start",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to start log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Ingest records into ADL2",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Log start",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "HttpReadSettings",
                                                            "requestMethod": "GET"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_HTTP_GenericDataset_csv",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "BaseURL": {
                                                                "value": "@item().SourceControl1",
                                                                "type": "Expression"
                                                            },
                                                            "FileAddress": {
                                                                "value": "@item().SourceControl2",
                                                                "type": "Expression"
                                                            },
                                                            "FileName": {
                                                                "value": "@item().SourceControl3",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_ADL2_GenericDataset_csv",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().DestinationKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "StorageAccount": {
                                                                "value": "@item().DestinationControl1",
                                                                "type": "Expression"
                                                            },
                                                            "ContainerName": {
                                                                "value": "@item().DestinationControl2",
                                                                "type": "Expression"
                                                            },
                                                            "FolderName": {
                                                                "value": "@item().DestinationControl3",
                                                                "type": "Expression"
                                                            },
                                                            "FileName": {
                                                                "value": "@item().DestinationControl4",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().DestinationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Get parameters to end log",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 100 --\"End with success\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Get parameters to log error",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 20 --\"End with error\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log end",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to end log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataRead",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataWritten",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.Throughput",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.rowsCopied",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log error",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to log error",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Verify tables to load into Destination",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT DISTINCT\n    'Yes'                       AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 1\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'\nUNION\nSELECT DISTINCT\n    'No'                        AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 0\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_OperationAzureDB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "SecretName": {
                                                    "value": "@pipeline().parameters.SecretName",
                                                    "type": "Expression"
                                                },
                                                "OperationKeyVaultURI": {
                                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "BatchProcessID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "SecretName": {
                        "type": "string",
                        "defaultValue": "SecretName"
                    },
                    "ScheduleName": {
                        "type": "string",
                        "defaultValue": "ScheduleName"
                    },
                    "BatchProcessPhaseNameID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "GroupLoad": {
                        "type": "string",
                        "defaultValue": "GroupLoad"
                    },
                    "OperationKeyVaultURI": {
                        "type": "string",
                        "defaultValue": "OperationKeyVaultURI"
                    }
                },
                "folder": {
                    "name": "Pipeline Templates/Source http"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-30T17:48:51Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Generic - From SQL Server - On-premises to to ADL2 wildcard - csv')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get records to load into ADL2",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT\n    MTC.*,\n    BS.ScheduleName\nFROM\n    [operation].[MetadataTableControl] MTC\nINNER JOIN\n    [operation].[BatchSchedule] BS ON MTC.BatchScheduleID = BS.BatchScheduleID\nWHERE\n    MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.Active = 1\n    AND BS.Active = 1\n    AND BS.ScheduleName = '@{pipeline().parameters.ScheduleName}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Load records into ADL2",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get records to load into ADL2",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get records to load into ADL2').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "if - Verify tables to load into Destination",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Verify tables to load into Destination",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@if(equals(activity('Verify tables to load into Destination').output.firstrow.ProcessTable,'Yes'), 'True','False')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Get parameters to start log",
                                                "type": "Lookup",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 10 --Status = 'Process running'\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log start",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to start log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Ingest records into ADL2",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Log start",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlServerSource",
                                                        "sqlReaderQuery": {
                                                            "value": "@{concat('SELECT * FROM ',\nitem().SourceControl3,'.',item().SourceControl4,' ',item().SourceControl5,' '\n)}",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_SQLServer_OnPremises",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().SourceKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "SchemaName": {
                                                                "value": "@item().SourceControl3",
                                                                "type": "Expression"
                                                            },
                                                            "TableName": {
                                                                "value": "@item().SourceControl4",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().SourceKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_ADL2_GenericDataset_csv",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().DestinationKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "StorageAccount": {
                                                                "value": "@item().DestinationControl1",
                                                                "type": "Expression"
                                                            },
                                                            "ContainerName": {
                                                                "value": "@item().DestinationControl2",
                                                                "type": "Expression"
                                                            },
                                                            "FolderName": {
                                                                "value": "@item().DestinationControl3",
                                                                "type": "Expression"
                                                            },
                                                            "FileName": {
                                                                "value": "@{concat(\nitem().DestinationControl4,'/',\nformatDateTime(addDays(utcnow(),-1),'yyyy'),'/',formatDateTime(addDays(utcnow(),-1),'MM'),'/',formatDateTime(addDays(utcnow(),-1),'dd'),'/',\nitem().DestinationControl5\n)}\n",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().DestinationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Get parameters to end log",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 100 --\"End with success\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Get parameters to log error",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 20 --\"End with error\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log end",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to end log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataRead",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataWritten",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.Throughput",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.rowsCopied",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log error",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to log error",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Verify tables to load into Destination",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT DISTINCT\n    'Yes'                       AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 1\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'\nUNION\nSELECT DISTINCT\n    'No'                        AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 0\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_OperationAzureDB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "SecretName": {
                                                    "value": "@pipeline().parameters.SecretName",
                                                    "type": "Expression"
                                                },
                                                "OperationKeyVaultURI": {
                                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "BatchProcessID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "SecretName": {
                        "type": "string",
                        "defaultValue": "SecretName"
                    },
                    "ScheduleName": {
                        "type": "string",
                        "defaultValue": "ScheduleName"
                    },
                    "BatchProcessPhaseNameID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "GroupLoad": {
                        "type": "string",
                        "defaultValue": "GroupLoad"
                    },
                    "OperationKeyVaultURI": {
                        "type": "string",
                        "defaultValue": "OperationKeyVaultURI"
                    }
                },
                "folder": {
                    "name": "Pipeline Templates/Source SQL Server"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-30T17:48:51Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Generic - From SQL Server - On-premises to to ADL2 - csv')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get records to load into ADL2",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT\n    MTC.*,\n    BS.ScheduleName\nFROM\n    [operation].[MetadataTableControl] MTC\nINNER JOIN\n    [operation].[BatchSchedule] BS ON MTC.BatchScheduleID = BS.BatchScheduleID\nWHERE\n    MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.Active = 1\n    AND BS.Active = 1\n    AND BS.ScheduleName = '@{pipeline().parameters.ScheduleName}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Load records into ADL2",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get records to load into ADL2",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get records to load into ADL2').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "if - Verify tables to load into Destination",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Verify tables to load into Destination",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@if(equals(activity('Verify tables to load into Destination').output.firstrow.ProcessTable,'Yes'), 'True','False')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Get parameters to start log",
                                                "type": "Lookup",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 10 --Status = 'Process running'\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log start",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to start log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Ingest records into ADL2",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Log start",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlServerSource",
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_SQLServer_OnPremises",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().SourceKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "SchemaName": {
                                                                "value": "@item().SourceControl3",
                                                                "type": "Expression"
                                                            },
                                                            "TableName": {
                                                                "value": "@item().SourceControl4",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().SourceKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_ADL2_GenericDataset_csv",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().DestinationKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "StorageAccount": {
                                                                "value": "@item().DestinationControl1",
                                                                "type": "Expression"
                                                            },
                                                            "ContainerName": {
                                                                "value": "@item().DestinationControl2",
                                                                "type": "Expression"
                                                            },
                                                            "FolderName": {
                                                                "value": "@item().DestinationControl3",
                                                                "type": "Expression"
                                                            },
                                                            "FileName": {
                                                                "value": "@item().DestinationControl4",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().DestinationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Get parameters to end log",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 100 --\"End with success\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Get parameters to log error",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 20 --\"End with error\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log end",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to end log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataRead",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataWritten",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.Throughput",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.rowsCopied",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log error",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to log error",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Verify tables to load into Destination",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT DISTINCT\n    'Yes'                       AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 1\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'\nUNION\nSELECT DISTINCT\n    'No'                        AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 0\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_OperationAzureDB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "SecretName": {
                                                    "value": "@pipeline().parameters.SecretName",
                                                    "type": "Expression"
                                                },
                                                "OperationKeyVaultURI": {
                                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "BatchProcessID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "SecretName": {
                        "type": "string",
                        "defaultValue": "SecretName"
                    },
                    "ScheduleName": {
                        "type": "string",
                        "defaultValue": "ScheduleName"
                    },
                    "BatchProcessPhaseNameID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "GroupLoad": {
                        "type": "string",
                        "defaultValue": "GroupLoad"
                    },
                    "OperationKeyVaultURI": {
                        "type": "string",
                        "defaultValue": "OperationKeyVaultURI"
                    }
                },
                "folder": {
                    "name": "Pipeline Templates/Source SQL Server"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-30T17:48:51Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Generic - From SQL Server - On-premises to to ADL2 - parquet')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get records to load into ADL2",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT\n    MTC.*,\n    BS.ScheduleName\nFROM\n    [operation].[MetadataTableControl] MTC\nINNER JOIN\n    [operation].[BatchSchedule] BS ON MTC.BatchScheduleID = BS.BatchScheduleID\nWHERE\n    MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.Active = 1\n    AND BS.Active = 1\n    AND BS.ScheduleName = '@{pipeline().parameters.ScheduleName}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Load records into ADL2",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get records to load into ADL2",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get records to load into ADL2').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "if - Verify tables to load into Destination",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Verify tables to load into Destination",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@if(equals(activity('Verify tables to load into Destination').output.firstrow.ProcessTable,'Yes'), 'True','False')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Get parameters to start log",
                                                "type": "Lookup",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 10 --Status = 'Process running'\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log start",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to start log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Ingest records into ADL2",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Log start",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "SqlServerSource",
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "ParquetSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "ParquetWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_SQLServer_OnPremises",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().SourceKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "SchemaName": {
                                                                "value": "@item().SourceControl3",
                                                                "type": "Expression"
                                                            },
                                                            "TableName": {
                                                                "value": "@item().SourceControl4",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().SourceKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_ADL2_GenericDataset_parquet",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().DestinationKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "StorageAccount": {
                                                                "value": "@item().DestinationControl1",
                                                                "type": "Expression"
                                                            },
                                                            "ContainerName": {
                                                                "value": "@item().DestinationControl2",
                                                                "type": "Expression"
                                                            },
                                                            "FolderName": {
                                                                "value": "@item().DestinationControl3",
                                                                "type": "Expression"
                                                            },
                                                            "FileName": {
                                                                "value": "@item().DestinationControl4",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().DestinationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Get parameters to end log",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 100 --\"End with success\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Get parameters to log error",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 20 --\"End with error\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log end",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to end log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataRead",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataWritten",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.Throughput",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.rowsCopied",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log error",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to log error",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Verify tables to load into Destination",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT DISTINCT\n    'Yes'                       AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 1\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'\nUNION\nSELECT DISTINCT\n    'No'                        AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 0\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_OperationAzureDB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "SecretName": {
                                                    "value": "@pipeline().parameters.SecretName",
                                                    "type": "Expression"
                                                },
                                                "OperationKeyVaultURI": {
                                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "BatchProcessID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "SecretName": {
                        "type": "string",
                        "defaultValue": "SecretName"
                    },
                    "ScheduleName": {
                        "type": "string",
                        "defaultValue": "ScheduleName"
                    },
                    "BatchProcessPhaseNameID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "GroupLoad": {
                        "type": "string",
                        "defaultValue": "GroupLoad"
                    },
                    "OperationKeyVaultURI": {
                        "type": "string",
                        "defaultValue": "OperationKeyVaultURI"
                    }
                },
                "folder": {
                    "name": "Pipeline Templates/Source SQL Server"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-30T17:48:51Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Generic - Azure Database to ADL2 - parquet')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get records to load into ADL2",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT\n    MTC.*,\n    BS.ScheduleName\nFROM\n    [operation].[MetadataTableControl] MTC\nINNER JOIN\n    [operation].[BatchSchedule] BS ON MTC.BatchScheduleID = BS.BatchScheduleID\nWHERE\n    MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.Active = 1\n    AND BS.Active = 1\n    AND BS.ScheduleName = '@{pipeline().parameters.ScheduleName}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Load records into ADL2",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get records to load into ADL2",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get records to load into ADL2').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "if - Verify tables to load into Destination",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Verify tables to load into Destination",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@if(equals(activity('Verify tables to load into Destination').output.firstrow.ProcessTable,'Yes'), 'True','False')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Get parameters to start log",
                                                "type": "Lookup",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 10 --Status = 'Process running'\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log start",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to start log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Ingest records into ADL2",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Log start",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "ParquetSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "ParquetWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_AzureDatabase_GenericDataset",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().SourceKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "SchemaName": {
                                                                "value": "@item().SourceControl3",
                                                                "type": "Expression"
                                                            },
                                                            "TableName": {
                                                                "value": "@item().SourceControl4",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().SourceKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_ADL2_GenericDataset_parquet",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().DestinationKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "StorageAccount": {
                                                                "value": "@item().DestinationControl1",
                                                                "type": "Expression"
                                                            },
                                                            "ContainerName": {
                                                                "value": "@item().DestinationControl2",
                                                                "type": "Expression"
                                                            },
                                                            "FolderName": {
                                                                "value": "@item().DestinationControl3",
                                                                "type": "Expression"
                                                            },
                                                            "FileName": {
                                                                "value": "@item().DestinationControl4",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().DestinationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Get parameters to end log",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 100 --\"End with success\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Get parameters to log error",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 20 --\"End with error\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log end",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to end log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataRead",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataWritten",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.Throughput",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.rowsCopied",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log error",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to log error",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Verify tables to load into Destination",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT DISTINCT\n    'Yes'                       AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 1\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'\nUNION\nSELECT DISTINCT\n    'No'                        AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 0\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_OperationAzureDB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "SecretName": {
                                                    "value": "@pipeline().parameters.SecretName",
                                                    "type": "Expression"
                                                },
                                                "OperationKeyVaultURI": {
                                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "BatchProcessID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "SecretName": {
                        "type": "string",
                        "defaultValue": "SecretName"
                    },
                    "ScheduleName": {
                        "type": "string",
                        "defaultValue": "ScheduleName"
                    },
                    "BatchProcessPhaseNameID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "GroupLoad": {
                        "type": "string",
                        "defaultValue": "GroupLoad"
                    },
                    "OperationKeyVaultURI": {
                        "type": "string",
                        "defaultValue": "OperationKeyVaultURI"
                    }
                },
                "folder": {
                    "name": "Pipeline Templates/Source Azure database"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-30T17:48:51Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Generic - Azure Database to ADL2 wildcard - parquet')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get records to load into ADL2",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT\n    MTC.*,\n    BS.ScheduleName\nFROM\n    [operation].[MetadataTableControl] MTC\nINNER JOIN\n    [operation].[BatchSchedule] BS ON MTC.BatchScheduleID = BS.BatchScheduleID\nWHERE\n    MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.Active = 1\n    AND BS.Active = 1\n    AND BS.ScheduleName = '@{pipeline().parameters.ScheduleName}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Load records into ADL2",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get records to load into ADL2",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get records to load into ADL2').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "if - Verify tables to load into Destination",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Verify tables to load into Destination",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@if(equals(activity('Verify tables to load into Destination').output.firstrow.ProcessTable,'Yes'), 'True','False')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Get parameters to start log",
                                                "type": "Lookup",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 10 --Status = 'Process running'\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log start",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to start log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Ingest records into ADL2",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Log start",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "ParquetSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "ParquetWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_AzureDatabase_GenericDataset",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().SourceKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "SchemaName": {
                                                                "value": "@item().SourceControl3",
                                                                "type": "Expression"
                                                            },
                                                            "TableName": {
                                                                "value": "@item().SourceControl4",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().SourceKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_ADL2_GenericDataset_parquet",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().DestinationKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "StorageAccount": {
                                                                "value": "@item().DestinationControl1",
                                                                "type": "Expression"
                                                            },
                                                            "ContainerName": {
                                                                "value": "@item().DestinationControl2",
                                                                "type": "Expression"
                                                            },
                                                            "FolderName": {
                                                                "value": "@item().DestinationControl3",
                                                                "type": "Expression"
                                                            },
                                                            "FileName": {
                                                                "value": "@{concat(\nitem().DestinationControl4,'/',\nformatDateTime(addDays(utcnow(),-1),'yyyy'),'/',formatDateTime(addDays(utcnow(),-1),'MM'),'/',formatDateTime(addDays(utcnow(),-1),'dd'),'/',\nitem().DestinationControl5\n)}",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().DestinationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Get parameters to end log",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 100 --\"End with success\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Get parameters to log error",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 20 --\"End with error\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log end",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to end log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataRead",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataWritten",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.Throughput",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.rowsCopied",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log error",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to log error",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Verify tables to load into Destination",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT DISTINCT\n    'Yes'                       AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 1\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'\nUNION\nSELECT DISTINCT\n    'No'                        AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 0\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_OperationAzureDB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "SecretName": {
                                                    "value": "@pipeline().parameters.SecretName",
                                                    "type": "Expression"
                                                },
                                                "OperationKeyVaultURI": {
                                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "BatchProcessID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "SecretName": {
                        "type": "string",
                        "defaultValue": "SecretName"
                    },
                    "ScheduleName": {
                        "type": "string",
                        "defaultValue": "ScheduleName"
                    },
                    "BatchProcessPhaseNameID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "GroupLoad": {
                        "type": "string",
                        "defaultValue": "GroupLoad"
                    },
                    "OperationKeyVaultURI": {
                        "type": "string",
                        "defaultValue": "OperationKeyVaultURI"
                    }
                },
                "folder": {
                    "name": "Pipeline Templates/Source Azure database"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-30T17:48:51Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Generic - From ADL2 - parquet to Azure Synapse Database')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get records to load into Synapse",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT\n    MTC.*,\n    BS.ScheduleName\nFROM\n    [operation].[MetadataTableControl] MTC\nINNER JOIN\n    [operation].[BatchSchedule] BS ON MTC.BatchScheduleID = BS.BatchScheduleID\nWHERE\n    MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.Active = 1\n    AND BS.Active = 1\n    AND BS.ScheduleName = '@{pipeline().parameters.ScheduleName}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Load records into Synapse",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get records to load into Synapse",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get records to load into Synapse').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "if - Verify tables to load into Destination",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Verify tables to load into Destination",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@if(equals(activity('Verify tables to load into Destination').output.firstrow.ProcessTable,'Yes'), 'True','False')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Get parameters to start log",
                                                "type": "Lookup",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 10 --Status = 'Process running'\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log start",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to start log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Ingest records into Synapse",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Log start",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "ParquetSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true,
                                                            "enablePartitionDiscovery": false
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "SqlDWSink",
                                                        "allowCopyCommand": true,
                                                        "copyCommandSettings": {}
                                                    },
                                                    "enableStaging": false
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_ADL2_GenericDataset_parquet",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().SourceKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "StorageAccount": {
                                                                "value": "@item().SourceControl1",
                                                                "type": "Expression"
                                                            },
                                                            "ContainerName": {
                                                                "value": "@item().SourceControl2",
                                                                "type": "Expression"
                                                            },
                                                            "FolderName": {
                                                                "value": "@item().SourceControl3",
                                                                "type": "Expression"
                                                            },
                                                            "FileName": {
                                                                "value": "@item().SourceControl4",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().SourceKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_AzureSynapse_GenericDataset",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().DestinationKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "SchemaName": {
                                                                "value": "@item().DestinationControl2",
                                                                "type": "Expression"
                                                            },
                                                            "TableName": {
                                                                "value": "@item().DestinationControl3",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().DestinationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Get parameters to end log",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into Synapse",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 100 --\"End with success\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Get parameters to log error",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into Synapse",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 20 --\"End with error\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log end",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to end log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into Synapse').output.DataRead",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into Synapse').output.DataWritten",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into Synapse').output.Throughput",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into Synapse').output.rowsCopied",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log error",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to log error",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Verify tables to load into Destination",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT DISTINCT\n    'Yes'                       AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 1\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'\nUNION\nSELECT DISTINCT\n    'No'                        AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 0\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_OperationAzureDB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "SecretName": {
                                                    "value": "@pipeline().parameters.SecretName",
                                                    "type": "Expression"
                                                },
                                                "OperationKeyVaultURI": {
                                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "BatchProcessID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "SecretName": {
                        "type": "string",
                        "defaultValue": "SecretName"
                    },
                    "ScheduleName": {
                        "type": "string",
                        "defaultValue": "ScheduleName"
                    },
                    "BatchProcessPhaseNameID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "GroupLoad": {
                        "type": "string",
                        "defaultValue": "GroupLoad"
                    },
                    "OperationKeyVaultURI": {
                        "type": "string",
                        "defaultValue": "OperationKeyVaultURI"
                    }
                },
                "folder": {
                    "name": "Pipeline Templates/Source Data Lake"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-30T17:48:51Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Generic - From ADL2 - parquet to ADL2 - parquet')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get records to load into Azure database",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT\n    MTC.*,\n    BS.ScheduleName\nFROM\n    [operation].[MetadataTableControl] MTC\nINNER JOIN\n    [operation].[BatchSchedule] BS ON MTC.BatchScheduleID = BS.BatchScheduleID\nWHERE\n    MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.Active = 1\n    AND BS.Active = 1\n    AND BS.ScheduleName = '@{pipeline().parameters.ScheduleName}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Load records into ADL2",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get records to load into Azure database",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get records to load into Azure database').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "if - Verify tables to load into Destination",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Verify tables to load into Destination",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@if(equals(activity('Verify tables to load into Destination').output.firstrow.ProcessTable,'Yes'), 'True','False')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Get parameters to start log",
                                                "type": "Lookup",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 10 --Status = 'Process running'\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log start",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to start log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to start log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Ingest records into ADL2",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Log start",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "ParquetSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSReadSettings",
                                                            "recursive": true,
                                                            "enablePartitionDiscovery": false
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "ParquetSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobFSWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "ParquetWriteSettings"
                                                        }
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "ds_ADL2_GenericDataset_parquet",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().SourceKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "StorageAccount": {
                                                                "value": "@item().SourceControl1",
                                                                "type": "Expression"
                                                            },
                                                            "ContainerName": {
                                                                "value": "@item().SourceControl2",
                                                                "type": "Expression"
                                                            },
                                                            "FolderName": {
                                                                "value": "@item().SourceControl3",
                                                                "type": "Expression"
                                                            },
                                                            "FileName": {
                                                                "value": "@item().SourceControl4",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().SourceKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "ds_ADL2_GenericDataset_parquet",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@item().DestinationKeyVaultSecretName",
                                                                "type": "Expression"
                                                            },
                                                            "StorageAccount": {
                                                                "value": "@item().DestinationControl1",
                                                                "type": "Expression"
                                                            },
                                                            "ContainerName": {
                                                                "value": "@item().DestinationControl2",
                                                                "type": "Expression"
                                                            },
                                                            "FolderName": {
                                                                "value": "@item().DestinationControl3",
                                                                "type": "Expression"
                                                            },
                                                            "FileName": {
                                                                "value": "@item().DestinationControl4",
                                                                "type": "Expression"
                                                            },
                                                            "KeyVaultURI": {
                                                                "value": "@item().DestinationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Get parameters to end log",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 100 --\"End with success\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Get parameters to log error",
                                                "type": "Lookup",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Ingest records into ADL2",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT\n    2 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    BPSM.BatchProcessStatusNameID,\n    BPTD.ProcessTableName,\n    BPTD.TableGroupNumber,\n    MTC.GroupLoad\nFROM\n\t[operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].[MetadataTableControl] MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessTableDetails] BPTD ON MTC.TableGroupNumber = BPTD.TableGroupNumber\n    AND MTC.BatchProcessPhaseNameID = BPTD.BatchProcessPhaseNameID\nCROSS JOIN\n    [operation].[BatchProcessStatusName] BPSM\nWHERE\n    --Please check passed filters:\n    BPSM.BatchProcessStatusNameID = 20 --\"End with error\"\n    AND MTC.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND BPTD.ProcessTableName = '@{item().FinalTableName}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "ds_OperationAzureDB",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "SecretName": {
                                                                "value": "@pipeline().parameters.SecretName",
                                                                "type": "Expression"
                                                            },
                                                            "OperationKeyVaultURI": {
                                                                "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log end",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to end log",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to end log').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataRead",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.DataWritten",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": {
                                                                "value": "@activity('Ingest records into ADL2').output.throughput",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log error",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get parameters to log error",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                                                    "storedProcedureParameters": {
                                                        "BatchProcessID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchProcessID",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "BatchProcessPhaseNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessPhaseNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessStatusNameID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchProcessStatusNameID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchScheduleID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.BatchScheduleID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "InsertUpsert": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.InsertUpsert}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "ProcessTableName": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProcessTableName}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ProjectID": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.ProjectID}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "TableGroupNumber": {
                                                            "value": {
                                                                "value": "@{activity('Get parameters to log error').output.firstRow.TableGroupNumber}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int16"
                                                        },
                                                        "BatchProcessIDOutPut": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        },
                                                        "DataRead": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "DataWritten": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "Throughput": {
                                                            "value": "0",
                                                            "type": "Decimal"
                                                        },
                                                        "RowsWritten": {
                                                            "value": "0",
                                                            "type": "Int32"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_OperationAzureDB",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "SecretName": {
                                                            "value": "@pipeline().parameters.SecretName",
                                                            "type": "Expression"
                                                        },
                                                        "OperationKeyVaultURI": {
                                                            "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Verify tables to load into Destination",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT DISTINCT\n    'Yes'                       AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 1\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'\nUNION\nSELECT DISTINCT\n    'No'                        AS ProcessTable,\n    BPTD.BatchProcessID         AS BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nINNER JOIN\n    [operation].[MetadataTableControl] MTC ON BPTD.TableGroupNumber = MTC.TableGroupNumber\n    AND BPTD.BatchScheduleID = MTC.BatchScheduleID\nWHERE\n    BPTD.ActiveInBatchProcess = 0\n    AND BPTD.BatchProcessPhaseNameID = '@{pipeline().parameters.BatchProcessPhaseNameID}'\n    AND BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessID}'\n    AND MTC.GroupLoad = '@{pipeline().parameters.GroupLoad}'\n    AND MTC.FinalTableName = '@{item().FinalTableName}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "ds_OperationAzureDB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "SecretName": {
                                                    "value": "@pipeline().parameters.SecretName",
                                                    "type": "Expression"
                                                },
                                                "OperationKeyVaultURI": {
                                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "BatchProcessID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "SecretName": {
                        "type": "string",
                        "defaultValue": "SecretName"
                    },
                    "ScheduleName": {
                        "type": "string",
                        "defaultValue": "ScheduleName"
                    },
                    "BatchProcessPhaseNameID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "GroupLoad": {
                        "type": "string",
                        "defaultValue": "GroupLoad"
                    },
                    "OperationKeyVaultURI": {
                        "type": "string",
                        "defaultValue": "OperationKeyVaultURI"
                    }
                },
                "folder": {
                    "name": "Pipeline Templates/Source Data Lake"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-05T18:01:07Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Main orchestrator - Transport Data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Call from ADL2 to ADL2",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Generic - From ADL2 - parquet to ADL2 - parquet",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "BatchProcessID": {
                                    "value": "@pipeline().parameters.BatchProcessIDOutPut",
                                    "type": "Expression"
                                },
                                "SecretName": {
                                    "value": "@pipeline().parameters.SecretName",
                                    "type": "Expression"
                                },
                                "ScheduleName": {
                                    "value": "@pipeline().parameters.ScheduleName",
                                    "type": "Expression"
                                },
                                "BatchProcessPhaseNameID": 26,
                                "GroupLoad": "Load Transport Data",
                                "OperationKeyVaultURI": {
                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get parameters to end log process",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Call from ADL2 to Databricks - Fact Yellow",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT\n    3 AS InsertUpsert,\n    MAX(BPTD.BatchProcessPhaseNameID) AS BatchProcessPhaseNameID,\n    100 AS BatchProcessStatusNameID,\n    BPTD.BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nWHERE\n    BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessIDOutPut}'\nGROUP BY\n    BPTD.BatchProcessID",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "Log end log process",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get parameters to end log process",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                            "storedProcedureParameters": {
                                "BatchProcessID": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchProcessIDOutPut",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "BatchProcessIDOutPut": {
                                    "value": "0",
                                    "type": "Int32"
                                },
                                "BatchProcessPhaseNameID": {
                                    "value": {
                                        "value": "@{activity('Get parameters to end log process').output.firstRow.BatchProcessPhaseNameID}",
                                        "type": "Expression"
                                    },
                                    "type": "Int16"
                                },
                                "BatchProcessStatusNameID": {
                                    "value": {
                                        "value": "@{activity('Get parameters to end log process').output.firstRow.BatchProcessStatusNameID}",
                                        "type": "Expression"
                                    },
                                    "type": "Int16"
                                },
                                "BatchScheduleID": {
                                    "value": {
                                        "value": "@{activity('Get parameters to end log process').output.firstRow.InsertUpsert}",
                                        "type": "Expression"
                                    },
                                    "type": "Int16"
                                },
                                "InsertUpsert": {
                                    "value": {
                                        "value": "@{activity('Get parameters to end log process').output.firstRow.InsertUpsert}",
                                        "type": "Expression"
                                    },
                                    "type": "Int16"
                                },
                                "ProcessTableName": {
                                    "value": "0",
                                    "type": "String"
                                },
                                "ProjectID": {
                                    "value": "0",
                                    "type": "Int16"
                                },
                                "TableGroupNumber": {
                                    "value": "0",
                                    "type": "Int16"
                                },
                                "DataRead": {
                                    "value": "0",
                                    "type": "Decimal"
                                },
                                "DataWritten": {
                                    "value": "0",
                                    "type": "Decimal"
                                },
                                "Throughput": {
                                    "value": "0",
                                    "type": "Decimal"
                                },
                                "RowsWritten": {
                                    "value": "0",
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_OperationAzureDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "SecretName": {
                                    "value": "@pipeline().parameters.SecretName",
                                    "type": "Expression"
                                },
                                "OperationKeyVaultURI": {
                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Call from ADL2 to Databricks - Dimension",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Call from ADL2 to ADL2",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Generic - Azure Databricks",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "BatchProcessID": {
                                    "value": "@pipeline().parameters.BatchProcessIDOutPut",
                                    "type": "Expression"
                                },
                                "SecretName": {
                                    "value": "@pipeline().parameters.SecretName",
                                    "type": "Expression"
                                },
                                "ScheduleName": {
                                    "value": "@pipeline().parameters.ScheduleName",
                                    "type": "Expression"
                                },
                                "BatchProcessPhaseNameID": 1,
                                "GroupLoad": "Load Transport Data - Dimension",
                                "OperationKeyVaultURI": {
                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Call from ADL2 to Databricks - Fact Green",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Call from ADL2 to Databricks - Dimension",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Generic - Azure Databricks",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "BatchProcessID": {
                                    "value": "@pipeline().parameters.BatchProcessIDOutPut",
                                    "type": "Expression"
                                },
                                "SecretName": {
                                    "value": "@pipeline().parameters.SecretName",
                                    "type": "Expression"
                                },
                                "ScheduleName": {
                                    "value": "@pipeline().parameters.ScheduleName",
                                    "type": "Expression"
                                },
                                "BatchProcessPhaseNameID": 1,
                                "GroupLoad": "Load Transport Data - Fact Green",
                                "OperationKeyVaultURI": {
                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Call from ADL2 to Databricks - Fact Yellow",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Call from ADL2 to Databricks - Fact Green",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Generic - Azure Databricks",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "BatchProcessID": {
                                    "value": "@pipeline().parameters.BatchProcessIDOutPut",
                                    "type": "Expression"
                                },
                                "SecretName": {
                                    "value": "@pipeline().parameters.SecretName",
                                    "type": "Expression"
                                },
                                "ScheduleName": {
                                    "value": "@pipeline().parameters.ScheduleName",
                                    "type": "Expression"
                                },
                                "BatchProcessPhaseNameID": 1,
                                "GroupLoad": "Load Transport Data - Fact Yellow",
                                "OperationKeyVaultURI": {
                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "SecretName": {
                        "type": "string",
                        "defaultValue": "SecretName"
                    },
                    "ScheduleName": {
                        "type": "string",
                        "defaultValue": "ScheduleName"
                    },
                    "BatchProcessIDOutPut": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "OperationKeyVaultURI": {
                        "type": "string",
                        "defaultValue": "OperationKeyVaultURI"
                    }
                },
                "folder": {
                    "name": "Projects/Transport Data/Load Transport Data"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-05T14:34:44Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Generic - From ADL2 - parquet to ADL2 - parquet')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Main orchestrator - Cosmos DB Mongo - process json')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Call from ADL2 to Cosmos DB Mongo",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Generic - From ADL2 wildcard - json to CosmosDB Mongo",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "BatchProcessID": {
                                    "value": "@pipeline().parameters.BatchProcessIDOutPut",
                                    "type": "Expression"
                                },
                                "SecretName": {
                                    "value": "@pipeline().parameters.SecretName",
                                    "type": "Expression"
                                },
                                "ScheduleName": {
                                    "value": "@pipeline().parameters.ScheduleName",
                                    "type": "Expression"
                                },
                                "BatchProcessPhaseNameID": 12,
                                "GroupLoad": "Cosmos DB - Mongo API",
                                "OperationKeyVaultURI": {
                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get parameters to end log process",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Call from ADL2 to Cosmos DB Mongo",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT\n    3 AS InsertUpsert,\n    MAX(BPTD.BatchProcessPhaseNameID) AS BatchProcessPhaseNameID,\n    100 AS BatchProcessStatusNameID,\n    BPTD.BatchProcessID\nFROM\n    [operation].[BatchProcessTableDetails] BPTD\nWHERE\n    BPTD.BatchProcessID = '@{pipeline().parameters.BatchProcessIDOutPut}'\nGROUP BY\n    BPTD.BatchProcessID",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "Log end log process",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get parameters to end log process",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[operation].[BatchProcess_Upsert]",
                            "storedProcedureParameters": {
                                "BatchProcessID": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchProcessIDOutPut",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "BatchProcessIDOutPut": {
                                    "value": "0",
                                    "type": "Int32"
                                },
                                "BatchProcessPhaseNameID": {
                                    "value": {
                                        "value": "@{activity('Get parameters to end log process').output.firstRow.BatchProcessPhaseNameID}",
                                        "type": "Expression"
                                    },
                                    "type": "Int16"
                                },
                                "BatchProcessStatusNameID": {
                                    "value": {
                                        "value": "@{activity('Get parameters to end log process').output.firstRow.BatchProcessStatusNameID}",
                                        "type": "Expression"
                                    },
                                    "type": "Int16"
                                },
                                "BatchScheduleID": {
                                    "value": {
                                        "value": "@{activity('Get parameters to end log process').output.firstRow.InsertUpsert}",
                                        "type": "Expression"
                                    },
                                    "type": "Int16"
                                },
                                "InsertUpsert": {
                                    "value": {
                                        "value": "@{activity('Get parameters to end log process').output.firstRow.InsertUpsert}",
                                        "type": "Expression"
                                    },
                                    "type": "Int16"
                                },
                                "ProcessTableName": {
                                    "value": "0",
                                    "type": "String"
                                },
                                "ProjectID": {
                                    "value": "0",
                                    "type": "Int16"
                                },
                                "TableGroupNumber": {
                                    "value": "0",
                                    "type": "Int16"
                                },
                                "DataRead": {
                                    "value": "0",
                                    "type": "Decimal"
                                },
                                "DataWritten": {
                                    "value": "0",
                                    "type": "Decimal"
                                },
                                "Throughput": {
                                    "value": "0",
                                    "type": "Decimal"
                                },
                                "RowsWritten": {
                                    "value": "0",
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_OperationAzureDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "SecretName": {
                                    "value": "@pipeline().parameters.SecretName",
                                    "type": "Expression"
                                },
                                "OperationKeyVaultURI": {
                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "SecretName": {
                        "type": "string",
                        "defaultValue": "SecretName"
                    },
                    "ScheduleName": {
                        "type": "string",
                        "defaultValue": "ScheduleName"
                    },
                    "BatchProcessIDOutPut": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "OperationKeyVaultURI": {
                        "type": "string",
                        "defaultValue": "OperationKeyVaultURI"
                    }
                },
                "folder": {
                    "name": "Projects/Contoso Data warehouse/Load Cosmos DB Mongo - process json files"
                },
                "annotations": [],
                "lastPublishTime": "2022-05-16T21:40:02Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Start Batch Process - Transport Data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get execution environment",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT * FROM [operation].[OperationEnvironment]",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "Log start batch process",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get parameters to start batch",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[operation].[BatchProcess_Upsert]",
                                "storedProcedureParameters": {
                                    "BatchProcessID": {
                                        "type": "Int32",
                                        "value": "0"
                                    },
                                    "BatchProcessIDOutPut": {
                                        "type": "Int32",
                                        "value": "0"
                                    },
                                    "BatchProcessPhaseNameID": {
                                        "type": "Int16",
                                        "value": {
                                            "value": "@{activity('Get parameters to start batch').output.firstRow.BatchProcessPhaseNameID}",
                                            "type": "Expression"
                                        }
                                    },
                                    "BatchProcessStatusNameID": {
                                        "type": "Int16",
                                        "value": {
                                            "value": "@{activity('Get parameters to start batch').output.firstRow.BatchProcessStatusNameID}",
                                            "type": "Expression"
                                        }
                                    },
                                    "BatchScheduleID": {
                                        "type": "Int16",
                                        "value": {
                                            "value": "@{activity('Get parameters to start batch').output.firstRow.BatchScheduleID}",
                                            "type": "Expression"
                                        }
                                    },
                                    "InsertUpsert": {
                                        "type": "Int16",
                                        "value": {
                                            "value": "@{activity('Get parameters to start batch').output.firstRow.InsertUpsert}",
                                            "type": "Expression"
                                        }
                                    },
                                    "ProcessTableName": {
                                        "type": "String",
                                        "value": "0"
                                    },
                                    "ProjectID": {
                                        "type": "Int16",
                                        "value": {
                                            "value": "@{activity('Get parameters to start batch').output.firstRow.ProjectID}",
                                            "type": "Expression"
                                        }
                                    },
                                    "TableGroupNumber": {
                                        "type": "Int16",
                                        "value": "0"
                                    },
                                    "DataRead": {
                                        "type": "Decimal",
                                        "value": "0"
                                    },
                                    "DataWritten": {
                                        "type": "Decimal",
                                        "value": "0"
                                    },
                                    "Throughput": {
                                        "type": "Decimal",
                                        "value": "0"
                                    },
                                    "RowsWritten": {
                                        "type": "Int32",
                                        "value": "0"
                                    }
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "Get parameters to start batch",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get execution environment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT DISTINCT\n    1 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    0 AS BatchProcessStatusNameID,\n    NULL AS TableGroupNumber,\n    NULL AS ProcessTableName\nFROM\n    [operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].MetadataTableControl MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessPhaseName] BPPN ON MTC.BatchProcessPhaseNameID = BPPN.BatchProcessPhaseNameID\nWHERE\n    BS.ScheduleName = '@{pipeline().parameters.ScheduleName}'\n    AND MTC.Active = 1",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "Call main orchestrator",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Log start batch process",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Main orchestrator - Transport Data",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SecretName": {
                                    "value": "@pipeline().parameters.SecretName",
                                    "type": "Expression"
                                },
                                "ScheduleName": {
                                    "value": "@pipeline().parameters.ScheduleName",
                                    "type": "Expression"
                                },
                                "BatchProcessIDOutPut": {
                                    "value": "@activity('Log start batch process').output.firstRow.BatchProcessIDOutPut",
                                    "type": "Expression"
                                },
                                "OperationKeyVaultURI": {
                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "SecretName": {
                        "type": "string",
                        "defaultValue": "OperationDatabaseConnectionString"
                    },
                    "ScheduleName": {
                        "type": "string",
                        "defaultValue": "Transport DW - monthly execution"
                    },
                    "CurrentBatchProcessID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "OperationKeyVaultURI": {
                        "type": "string",
                        "defaultValue": "https://akv-datalake-accelerator.vault.azure.net/"
                    }
                },
                "folder": {
                    "name": "Projects/Transport Data/Load Transport Data"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-30T20:18:00Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Main orchestrator - Transport Data')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Start Batch Process - Cosmos DB Mongo - process json')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get execution environment",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT * FROM [operation].[OperationEnvironment]",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "Log start batch process",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get parameters to start batch",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[operation].[BatchProcess_Upsert]",
                                "storedProcedureParameters": {
                                    "BatchProcessID": {
                                        "type": "Int32",
                                        "value": "0"
                                    },
                                    "BatchProcessIDOutPut": {
                                        "type": "Int32",
                                        "value": "0"
                                    },
                                    "BatchProcessPhaseNameID": {
                                        "type": "Int16",
                                        "value": {
                                            "value": "@{activity('Get parameters to start batch').output.firstRow.BatchProcessPhaseNameID}",
                                            "type": "Expression"
                                        }
                                    },
                                    "BatchProcessStatusNameID": {
                                        "type": "Int16",
                                        "value": {
                                            "value": "@{activity('Get parameters to start batch').output.firstRow.BatchProcessStatusNameID}",
                                            "type": "Expression"
                                        }
                                    },
                                    "BatchScheduleID": {
                                        "type": "Int16",
                                        "value": {
                                            "value": "@{activity('Get parameters to start batch').output.firstRow.BatchScheduleID}",
                                            "type": "Expression"
                                        }
                                    },
                                    "InsertUpsert": {
                                        "type": "Int16",
                                        "value": {
                                            "value": "@{activity('Get parameters to start batch').output.firstRow.InsertUpsert}",
                                            "type": "Expression"
                                        }
                                    },
                                    "ProcessTableName": {
                                        "type": "String",
                                        "value": "0"
                                    },
                                    "ProjectID": {
                                        "type": "Int16",
                                        "value": {
                                            "value": "@{activity('Get parameters to start batch').output.firstRow.ProjectID}",
                                            "type": "Expression"
                                        }
                                    },
                                    "TableGroupNumber": {
                                        "type": "Int16",
                                        "value": "0"
                                    },
                                    "DataRead": {
                                        "type": "Decimal",
                                        "value": "0"
                                    },
                                    "DataWritten": {
                                        "type": "Decimal",
                                        "value": "0"
                                    },
                                    "Throughput": {
                                        "type": "Decimal",
                                        "value": "0"
                                    },
                                    "RowsWritten": {
                                        "type": "Int32",
                                        "value": "0"
                                    }
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "Get parameters to start batch",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get execution environment",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT\n    1 AS InsertUpsert,\n    NULL AS BatchProcessID,\n    MTC.BatchProcessPhaseNameID,\n    PR.ProjectID,\n    MTC.BatchScheduleID,\n    0 AS BatchProcessStatusNameID,\n    NULL AS TableGroupNumber,\n    NULL AS ProcessTableName\nFROM\n    [operation].[ProjectName] PR\nINNER JOIN\n\t[operation].[BatchSchedule] BS ON PR.ProjectID = BS.ProjectID\nINNER JOIN\n\t[operation].MetadataTableControl MTC ON BS.BatchScheduleID = MTC.BatchScheduleID\nINNER JOIN\n    [operation].[BatchProcessPhaseName] BPPN ON MTC.BatchProcessPhaseNameID = BPPN.BatchProcessPhaseNameID\nWHERE\n    BS.ScheduleName = '@{pipeline().parameters.ScheduleName}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "ds_OperationAzureDB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SecretName": {
                                        "value": "@pipeline().parameters.SecretName",
                                        "type": "Expression"
                                    },
                                    "OperationKeyVaultURI": {
                                        "value": "@pipeline().parameters.OperationKeyVaultURI",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "Call main orchestrator",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Log start batch process",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "Main orchestrator - Cosmos DB Mongo - process json",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SecretName": {
                                    "value": "@pipeline().parameters.SecretName",
                                    "type": "Expression"
                                },
                                "ScheduleName": {
                                    "value": "@pipeline().parameters.ScheduleName",
                                    "type": "Expression"
                                },
                                "BatchProcessIDOutPut": {
                                    "value": "@activity('Log start batch process').output.firstRow.BatchProcessIDOutPut",
                                    "type": "Expression"
                                },
                                "OperationKeyVaultURI": {
                                    "value": "@pipeline().parameters.OperationKeyVaultURI",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "SecretName": {
                        "type": "string",
                        "defaultValue": "SecretName"
                    },
                    "ScheduleName": {
                        "type": "string",
                        "defaultValue": "ScheduleName"
                    },
                    "CurrentBatchProcessID": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "OperationKeyVaultURI": {
                        "type": "string",
                        "defaultValue": "OperationKeyVaultURI"
                    }
                },
                "folder": {
                    "name": "Projects/Contoso Data warehouse/Load Cosmos DB Mongo - process json files"
                },
                "annotations": [],
                "lastPublishTime": "2022-03-15T20:23:24Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Main orchestrator - Cosmos DB Mongo - process json')]"
            ]
        }
    ]
}